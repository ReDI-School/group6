<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Displaying text directions with <code>setPanel()</code></title>
    <style>
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #floating-panel {
        position: absolute;
        top: 10px;
        left: 25%;
        z-index: 5;
        background-color: #fff;
        color: #333;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }
      #right-panel {
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }

      #right-panel select, #right-panel input {
        font-size: 15px;
      }

      #right-panel select {
        width: 100%;
      }

      #right-panel i {
        font-size: 12px;
      }
      #right-panel {
        height: 100%;
        float: right;
        width: 390px;
        overflow: auto;
      }
      #floating-panel {
        background: #fff;
        padding: 5px;
        font-size: 14px;
        font-family: Arial;
        border: 1px solid #ccc;
        box-shadow: 0 2px 2px rgba(33, 33, 33, 0.4);
        display: none;
      }
       .locations {
          width: 100%;
          height: 500px;
          background-color: rgba(255,255,255,.5);
          padding: 20px;
          overflow: auto;
          text-align: left;
        }
        #map {
          height: 500px;
          width: 100%;
          margin: 0;
        }

      @media print {

        #right-panel {
          float: none;
          width: auto;
        }
      }
    </style>
  </head>
  <body>
    <div id="floating-panel">
      <b>Mode of Travel: </b>
    <select id="mode">
      <option value="DRIVING">Driving</option>
      <option value="WALKING">Walking</option>
      <option value="BICYCLING">Bicycling</option>
      <option value="TRANSIT">Transit</option>
    </select>
    <br>
      <strong>End:</strong>
      <select id="end">
        <% @locations.each do |location| %>
           <option value='{"lat": <%= location.lat %>, "lng": <%= location.long %>}'>
            <%= location.name %></option>
        <% end %>
      </select>
    </div>
    <div class="container">
      <div class="row">
        <div class="col-sm-9">
          <div id="map"></div>
        </div>
        <div class="col-sm-3">
          <div class="locations" >
            <ul>
            <% @locations.each do |location| %>
            <li>
            <a href="#" onclick="javascipt:map.panTo({lat: <%= location.lat %>, lng: <%= location.long %>}); map.setZoom(16)"><%= location.name %></a> |
            <%= link_to 'Edit', edit_location_path(location) %> |
            <%= link_to 'Delete', location, method: :delete, data: { confirm: 'Are you sure?' } %>
            </li>
            <% end %>
            </ul>
            <%= link_to 'New Location', new_location_path %>
          </div>

        </div>
      </div>
    </div>
    <script>
      var map;
      var directionsDisplay;
      var directionsService;
      function initMap() {
        directionsDisplay = new google.maps.DirectionsRenderer;
        directionsService = new google.maps.DirectionsService;
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 11,
          center: {lat:  52.5060713, lng: 13.3962265}
        });
        <% @locations.each do |location| %>
          new google.maps.Marker({
              map: map,
              position: {lat: <%= location.lat %>, lng: <%= location.long %>},
              title: '<%= location.name %>' });
        <% end %>

        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('right-panel'));

        var control = document.getElementById('floating-panel');
        control.style.display = 'block';
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);

        var onChangeHandler = function() {
          calculateAndDisplayRoute(directionsService, directionsDisplay);
          document.getElementById('mode').addEventListener('change', function() {
          calculateAndDisplayRoute(directionsService, directionsDisplay);
        });
      }
        document.getElementById('end').addEventListener('change', onChangeHandler);
      }

      function calculateAndDisplayRoute(directionsService, directionsDisplay) {

        var endEl = document.getElementById("end");
        var end = endEl.options[endEl.selectedIndex].value;

  var start = navigator.geolocation.getCurrentPosition(function(position){
            start = {lat: position.coords.latitude, lng: position.coords.longitude};
            showRoute(start, JSON.parse(end));
          });
      }

      function showRoute(start, end){
        var selectedMode = document.getElementById('mode').value;
        directionsService.route({
          origin: start,
          destination: end,
          travelMode: google.maps.TravelMode[selectedMode]

        }, function(response, status) {
          if (status === google.maps.DirectionsStatus.OK) {
            directionsDisplay.setDirections(response);
          } else {
            window.alert('Directions request failed due to ' + status);
          }
        });
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC_viYAPxX0PcTdcTS6ep58Ot9ZtgYsqNU&callback=initMap"
    async defer></script>

  </body>
</html>
