<p id="notice"><%= notice %></p>

<h1>Listing Locations</h1>

  <div id="map"></div>

<div class="locations" >
  <ul>
    <% @locations.each do |location| %>
    <li>
      <a href="#" onclick="javascipt:map.panTo({lat: <%= location.lat %>, lng: <%= location.long %>}); map.setZoom(16)"><%= location.name %></a> |
      <%= link_to 'Edit', edit_location_path(location) %> |
      <%= link_to 'Delete', location, method: :delete, data: { confirm: 'Are you sure?' } %>
    </li>
    <% end %>
    </ul>

  <br>

  <%= link_to 'New Location', new_location_path %>

  <script type="text/javascript">

  var map;

  function initMap() {
    var markerArray = [];

    var directionsService = new google.maps.DirectionsService;


    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 52.5060713, lng: 13.3962265},
      zoom: 11 });

      var directionsDisplay = new google.maps.DirectionsRenderer({map: map});

      var stepDisplay = new google.maps.InfoWindow;

      calculateAndDisplayRoute(
      directionsDisplay, directionsService, markerArray, stepDisplay, map);

      var onChangeHandler = function() {
    calculateAndDisplayRoute(
        directionsDisplay, directionsService, markerArray, stepDisplay, map);
  };
  document.getElementById('start').addEventListener('change', onChangeHandler);
  document.getElementById('end').addEventListener('change', onChangeHandler);
}

function calculateAndDisplayRoute(directionsDisplay, directionsService,
    markerArray, stepDisplay, map) {
  for (var i = 0; i < markerArray.length; i++) {
    markerArray[i].setMap(null);
  }

  directionsService.route({
    origin: document.getElementById('start').value,
    destination: document.getElementById('end').value,
    travelMode: google.maps.TravelMode.WALKING
  }, function(response, status) {
    // Route the directions and pass the response to a function to create
    // markers for each step.
    if (status === google.maps.DirectionsStatus.OK) {
      document.getElementById('warnings-panel').innerHTML =
          '<b>' + response.routes[0].warnings + '</b>';
      directionsDisplay.setDirections(response);
      showSteps(response, markerArray, stepDisplay, map);
    } else {
      window.alert('Directions request failed due to ' + status);
    }
  });
}

function showSteps(directionResult, markerArray, stepDisplay, map) {
  var myRoute = directionResult.routes[0].legs[0];
    for (var i = 0; i < myRoute.steps.length; i++) {
      var marker = markerArray[i] = markerArray[i] || new google.maps.Marker;
      marker.setMap(map);
      marker.setPosition(myRoute.steps[i].start_location);
      attachInstructionText(
          stepDisplay, marker, myRoute.steps[i].instructions, map);
    }
  }

  function attachInstructionText(stepDisplay, marker, text, map) {
    google.maps.event.addListener(marker, 'click', function() {
      stepDisplay.setContent(text);
      stepDisplay.open(map, marker);
    });
  }



  map = new google.maps.Map(document.getElementById('map'), {
     center: {lat: 52.5060713, lng: 13.3962265},
     zoom: 11
  });

  new google.maps.Marker({
    map: map,
    position: {lat: 52.5264792, lng: 13.3480563},
    title: 'SocialAmt'
  });

  new google.maps.Marker({
    map: map,
    position: {lat: 52.5542767, lng: 13.1998871},
    title: 'BAMF!'
    });

  new google.maps.Marker({
     map: map,
     position: {lat: 52.5376581, lng: 13.3496172},
     title: 'Auslenderbehorde!'
  });

  new google.maps.Marker({
     map: map,
     position: {lat: 52.5471359, lng: 13.3610246},
     title: 'VHS'
  });
  new google.maps.Marker({
     map: map,
     position: {lat: 52.5082587, lng: 13.4202147},
     title: 'Syrischen Botschaft'
  });


    //    <% @locations.each do |location| %>
    //    new google.maps.Marker({
      //    map: map,
    //      position: {lat: <%= location.lat %>, lng: <%= location.long %>},
    //      title: '<%= location.name %>' });
    //      <% end %>


                    </script>

                    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC_viYAPxX0PcTdcTS6ep58Ot9ZtgYsqNU&callback=initMap"
                    async defer></script>
